<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKAAAADVCAMAAADn/gttAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAACH
        DwAAjA8AAP1SAACBQAAAfXkAAOmLAAA85QAAGcxzPIV3AAAKOWlDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAAEjHnZZ3VFTXFofPvXd6oc0wAlKG3rvAANJ7k15FYZgZYCgDDjM0sSGiAhFFRJoiSFDEgNFQJFZE
        sRAUVLAHJAgoMRhFVCxvRtaLrqy89/Ly++Osb+2z97n77L3PWhcAkqcvl5cGSwGQyhPwgzyc6RGRUXTs
        AIABHmCAKQBMVka6X7B7CBDJy82FniFyAl8EAfB6WLwCcNPQM4BOB/+fpFnpfIHomAARm7M5GSwRF4g4
        JUuQLrbPipgalyxmGCVmvihBEcuJOWGRDT77LLKjmNmpPLaIxTmns1PZYu4V8bZMIUfEiK+ICzO5nCwR
        3xKxRoowlSviN+LYVA4zAwAUSWwXcFiJIjYRMYkfEuQi4uUA4EgJX3HcVyzgZAvEl3JJS8/hcxMSBXQd
        li7d1NqaQffkZKVwBALDACYrmcln013SUtOZvBwAFu/8WTLi2tJFRbY0tba0NDQzMv2qUP91829K3NtF
        ehn4uWcQrf+L7a/80hoAYMyJarPziy2uCoDOLQDI3fti0zgAgKSobx3Xv7oPTTwviQJBuo2xcVZWlhGX
        wzISF/QP/U+Hv6GvvmckPu6P8tBdOfFMYYqALq4bKy0lTcinZ6QzWRy64Z+H+B8H/nUeBkGceA6fwxNF
        hImmjMtLELWbx+YKuGk8Opf3n5r4D8P+pMW5FonS+BFQY4yA1HUqQH7tBygKESDR+8Vd/6NvvvgwIH55
        4SqTi3P/7zf9Z8Gl4iWDm/A5ziUohM4S8jMX98TPEqABAUgCKpAHykAd6ABDYAasgC1wBG7AG/iDEBAJ
        VgMWSASpgA+yQB7YBApBMdgJ9oBqUAcaQTNoBcdBJzgFzoNL4Bq4AW6D+2AUTIBnYBa8BgsQBGEhMkSB
        5CEVSBPSh8wgBmQPuUG+UBAUCcVCCRAPEkJ50GaoGCqDqqF6qBn6HjoJnYeuQIPQXWgMmoZ+h97BCEyC
        qbASrAUbwwzYCfaBQ+BVcAK8Bs6FC+AdcCXcAB+FO+Dz8DX4NjwKP4PnEIAQERqiihgiDMQF8UeikHiE
        j6xHipAKpAFpRbqRPuQmMorMIG9RGBQFRUcZomxRnqhQFAu1BrUeVYKqRh1GdaB6UTdRY6hZ1Ec0Ga2I
        1kfboL3QEegEdBa6EF2BbkK3oy+ib6Mn0K8xGAwNo42xwnhiIjFJmLWYEsw+TBvmHGYQM46Zw2Kx8lh9
        rB3WH8vECrCF2CrsUexZ7BB2AvsGR8Sp4Mxw7rgoHA+Xj6vAHcGdwQ3hJnELeCm8Jt4G749n43PwpfhG
        fDf+On4Cv0CQJmgT7AghhCTCJkIloZVwkfCA8JJIJKoRrYmBRC5xI7GSeIx4mThGfEuSIemRXEjRJCFp
        B+kQ6RzpLuklmUzWIjuSo8gC8g5yM/kC+RH5jQRFwkjCS4ItsUGiRqJDYkjiuSReUlPSSXK1ZK5kheQJ
        yeuSM1J4KS0pFymm1HqpGqmTUiNSc9IUaVNpf+lU6RLpI9JXpKdksDJaMm4ybJkCmYMyF2TGKQhFneJC
        YVE2UxopFykTVAxVm+pFTaIWU7+jDlBnZWVkl8mGyWbL1sielh2lITQtmhcthVZKO04bpr1borTEaQln
        yfYlrUuGlszLLZVzlOPIFcm1yd2WeydPl3eTT5bfJd8p/1ABpaCnEKiQpbBf4aLCzFLqUtulrKVFS48v
        vacIK+opBimuVTyo2K84p6Ss5KGUrlSldEFpRpmm7KicpFyufEZ5WoWiYq/CVSlXOavylC5Ld6Kn0Cvp
        vfRZVUVVT1Whar3qgOqCmrZaqFq+WpvaQ3WCOkM9Xr1cvUd9VkNFw08jT6NF454mXpOhmai5V7NPc15L
        Wytca6tWp9aUtpy2l3audov2Ax2yjoPOGp0GnVu6GF2GbrLuPt0berCehV6iXo3edX1Y31Kfq79Pf9AA
        bWBtwDNoMBgxJBk6GWYathiOGdGMfI3yjTqNnhtrGEcZ7zLuM/5oYmGSYtJoct9UxtTbNN+02/R3Mz0z
        llmN2S1zsrm7+QbzLvMXy/SXcZbtX3bHgmLhZ7HVosfig6WVJd+y1XLaSsMq1qrWaoRBZQQwShiXrdHW
        ztYbrE9Zv7WxtBHYHLf5zdbQNtn2iO3Ucu3lnOWNy8ft1OyYdvV2o/Z0+1j7A/ajDqoOTIcGh8eO6o5s
        xybHSSddpySno07PnU2c+c7tzvMuNi7rXM65Iq4erkWuA24ybqFu1W6P3NXcE9xb3Gc9LDzWepzzRHv6
        eO7yHPFS8mJ5NXvNelt5r/Pu9SH5BPtU+zz21fPl+3b7wX7efrv9HqzQXMFb0ekP/L38d/s/DNAOWBPw
        YyAmMCCwJvBJkGlQXlBfMCU4JvhI8OsQ55DSkPuhOqHC0J4wybDosOaw+XDX8LLw0QjjiHUR1yIVIrmR
        XVHYqLCopqi5lW4r96yciLaILoweXqW9KnvVldUKq1NWn46RjGHGnIhFx4bHHol9z/RnNjDn4rziauNm
        WS6svaxnbEd2OXuaY8cp40zG28WXxU8l2CXsTphOdEisSJzhunCruS+SPJPqkuaT/ZMPJX9KCU9pS8Wl
        xqae5Mnwknm9acpp2WmD6frphemja2zW7Fkzy/fhN2VAGasyugRU0c9Uv1BHuEU4lmmfWZP5Jiss60S2
        dDYvuz9HL2d7zmSue+63a1FrWWt78lTzNuWNrXNaV78eWh+3vmeD+oaCDRMbPTYe3kTYlLzpp3yT/LL8
        V5vDN3cXKBVsLBjf4rGlpVCikF84stV2a9021DbutoHt5turtn8sYhddLTYprih+X8IqufqN6TeV33za
        Eb9joNSydP9OzE7ezuFdDrsOl0mX5ZaN7/bb3VFOLy8qf7UnZs+VimUVdXsJe4V7Ryt9K7uqNKp2Vr2v
        Tqy+XeNc01arWLu9dn4fe9/Qfsf9rXVKdcV17w5wD9yp96jvaNBqqDiIOZh58EljWGPft4xvm5sUmoqb
        PhziHRo9HHS4t9mqufmI4pHSFrhF2DJ9NProje9cv+tqNWytb6O1FR8Dx4THnn4f+/3wcZ/jPScYJ1p/
        0Pyhtp3SXtQBdeR0zHYmdo52RXYNnvQ+2dNt293+o9GPh06pnqo5LXu69AzhTMGZT2dzz86dSz83cz7h
        /HhPTM/9CxEXbvUG9g5c9Ll4+ZL7pQt9Tn1nL9tdPnXF5srJq4yrndcsr3X0W/S3/2TxU/uA5UDHdavr
        XTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriXeW/h/sYH6AdFD6UeVjxS
        fNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2dmnafvvF05dOJZ+nPFmYKf5X+
        tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/MF72Rf3P4LeNt37vwd5MLWe+x7ys/
        6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAwBQTFRF////AAAABgYGCQkJ9PT0/Pz89/f3GhoaLi4uMzMz
        3t7eU1NT8PDwDg4OWlpaEhISwcHB1NTU5+fnJSUlHx8fbGxsZGRkm5ubTU1NXl5eiIiIGxsbubm5ycnJ
        fHx8paWlPDw8dHR0SUlJkJCQpKSksLCwKSkpioqKu7u7Q0NDxcXFMjIygICAmJiY4uLiLy8vMDAwMTEx
        MjIyMzMzNDQ0NTU1NjY2Nzc3ODg4OTk5Ojo6Ozs7PDw8PT09Pj4+Pz8/QEBAQUFBQkJCQ0NDRERERUVF
        RkZGR0dHSEhISUlJSkpKS0tLTExMTU1NTk5OT09PUFBQUVFRUlJSU1NTVFRUVVVVVlZWV1dXWFhYWVlZ
        WlpaW1tbXFxcXV1dXl5eX19fYGBgYWFhYmJiY2NjZGRkZWVlZmZmZ2dnaGhoaWlpampqa2trbGxsbW1t
        bm5ub29vcHBwcXFxcnJyc3NzdHR0dXV1dnZ2d3d3eHh4eXl5enp6e3t7fHx8fX19fn5+f39/gICAgYGB
        goKCg4ODhISEhYWFhoaGh4eHiIiIiYmJioqKi4uLjIyMjY2Njo6Oj4+PkJCQkZGRkpKSk5OTlJSUlZWV
        lpaWl5eXmJiYmZmZmpqam5ubnJycnZ2dnp6en5+foKCgoaGhoqKio6OjpKSkpaWlpqamp6enqKioqamp
        qqqqq6urrKysra2trq6ur6+vsLCwsbGxsrKys7OztLS0tbW1tra2t7e3uLi4ubm5urq6u7u7vLy8vb29
        vr6+v7+/wMDAwcHBwsLCw8PDxMTExcXFxsbGx8fHyMjIycnJysrKy8vLzMzMzc3Nzs7Oz8/P0NDQ0dHR
        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
</value>
  </data>
</root>